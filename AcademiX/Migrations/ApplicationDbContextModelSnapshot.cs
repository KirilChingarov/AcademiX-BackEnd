// <auto-generated />
using AcademiX.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademiX.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AcademiX.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cabinet")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkingTime")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("AcademiX.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("AcademiX.Models.ThesisSupervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cabinet")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsReviewer")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkingTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ThesisSupervisors");
                });

            modelBuilder.Entity("AcademiX.Models.ThesisSupervisorsSpecialties", b =>
                {
                    b.Property<int>("ThesisSupervisorId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ThesisSupervisorId", "SpecialtyId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("ThesisSupervisorsSpecialties");
                });

            modelBuilder.Entity("AcademiX.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });


            modelBuilder.Entity("AcademiX.Models.ThesisSupervisorsSpecialties", b =>
                {
                    b.HasOne("AcademiX.Models.Specialty", "Specialty")
                        .WithMany("ThesisSupervisorsSpecialties")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademiX.Models.ThesisSupervisor", "ThesisSupervisor")
                        .WithMany("ThesisSupervisorsSpecialties")
                        .HasForeignKey("ThesisSupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");

                    b.Navigation("ThesisSupervisor");
                });

            modelBuilder.Entity("AcademiX.Models.Specialty", b =>
                {
                    b.Navigation("ThesisSupervisorsSpecialties");
                });

            modelBuilder.Entity("AcademiX.Models.ThesisSupervisor", b =>
                {
                    b.Navigation("ThesisSupervisorsSpecialties");

            modelBuilder.Entity("AcademiX.Models.Reviewer", b =>
                {
                    b.HasOne("AcademiX.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                });
#pragma warning restore 612, 618
        }
    }
}
